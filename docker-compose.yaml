version: "3.8"
name: "coursework_7"

x-django-app-env: &django-app-env
  env_file:
    - .env.docker
  environment:
     DB_HOST: "postgres"
     DB_USER: "postgres"
     DB_NAME: "postgres"
     DB_PASSWORD: "postgres"
     CELERY_BROKER_URL: "redis://redis:6379/0"
     CELERY_RESULT_BACKEND: "redis://redis:6379/0"
  restart: always

services:
  web:
    depends_on:
      - postgres
      - redis
    build: .

    <<: *django-app-env

    command: /bin/sh -c "./startup.sh"

    ports:
      - "8080:80"
    networks:
      - net_lan

  celery:
    depends_on:
      - postgres
      - redis
    build: .
    networks:
      - net_lan

    <<: *django-app-env
    command: celery -A config worker -l INFO


  celery-beat:
    depends_on:
      - postgres
      - redis
    build: .
    networks:
      - net_lan

    <<: *django-app-env
    command: celery -A config beat -l INFO -S django


  telegram-poll:
    depends_on:
      - postgres
      - redis
    build: .
    networks:
      - net_lan
    profiles:
      - tg_poll

    <<: *django-app-env
    command: python manage.py telegrampoll

  postgres:
    image: postgres:alpine3.19
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

    volumes:
      - postgres_cw7_data:/var/lib/postgresql/data
    networks:
      - net_lan

  redis:
    image: redis:alpine3.19
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli --raw incr ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: always

    volumes:
      - redis_cw7_data:/data
    networks:
      - net_lan

volumes:
  postgres_cw7_data:
  redis_cw7_data:

networks:
  net_lan:
    driver: bridge